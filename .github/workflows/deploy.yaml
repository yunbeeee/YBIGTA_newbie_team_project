name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행
      # - github_action  # github_action 브랜치에 push될 때 실행

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository  # GitHub에서 코드 가져오기
        uses: actions/checkout@v3

      - name: Login to Docker Hub  # Docker Hub 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image  # Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .

      - name: Push Docker Image to Docker Hub  # Docker Hub에 업로드
        run: docker push ${{ secrets.DOCKER_IMAGE_NAME }}
 
  deploy-to-ec2:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push  # build-and-push job이 끝난 후 실행됨
    steps:
      - name: Deploy to EC2 using SSH  # SSH를 사용해 EC2에 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_IMAGE_NAME }}
            docker stop app || true  # 기존 컨테이너 중지 (없어도 에러 안 나게)
            docker rm app || true  # 기존 컨테이너 삭제 (없어도 에러 안 나게)
            docker run -d --name app -p 80:80 ${{ secrets.DOCKER_IMAGE_NAME }}  # 새 컨테이너 실행
